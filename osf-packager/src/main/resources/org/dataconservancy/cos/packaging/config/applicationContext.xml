<!--
  ~ Copyright 2016 Johns Hopkins University
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
  <!--
    Configuration for connecting to OSF and Waterbutler
      The services provide mutators for the configuration, but as long as we don't mutate the configuration they can
      be safely shared as singletons.

      These beans override beans of the same name from the osf-client module, in order to specify the location of
      the client configuration.
  -->
  <bean id="osfConfigurationSvc" class="org.dataconservancy.cos.osf.client.config.JacksonOsfConfigurationService">
    <constructor-arg value="org/dataconservancy/cos/packaging/config/osf-client.json"/>
  </bean>

  <bean id="wbConfigurationSvc" class="org.dataconservancy.cos.osf.client.config.JacksonWbConfigurationService">
    <constructor-arg value="org/dataconservancy/cos/packaging/config/osf-client.json"/>
  </bean>

  <!--
    Facade providing access to a Jena model that enforces compliance with the OSF ontology.
     May *not* be shared as a singleton.
  -->
  <bean id="ontologyManager" class="org.dataconservancy.cos.osf.packaging.support.OntologyManager" scope="prototype"/>

  <!--
    Provides convenience methods for converting Java objects to RDF according to the OSF ontology.
      May *not* be shared as a singleton.
  -->
  <bean id="packageGraph" class="org.dataconservancy.cos.osf.packaging.OsfPackageGraph" scope="prototype">
    <constructor-arg ref="ontologyManager"/>
  </bean>

</beans>